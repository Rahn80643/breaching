name: MNIST
modality: vision
task: classification

path: "~/data"
size: 60_000
classes: 10
shape:
  - 3 # though it's gray scale, expand to 3 channels to fit the training algorithm
  - 28
  - 28

# Preprocessing
# https://stackoverflow.com/questions/70892017/normalize-mnist-in-pytorch
# https://nextjournal.com/gkoehler/pytorch-mnist
normalize: True
mean:
  - 0.1307
  # - 0.1307
  # - 0.1307
std:
  - 0.3081
  # - 0.3081
  # - 0.3081

# Data Augmentations
augmentations_train:
  RandomCrop:
    - 28
    - 4
  RandomHorizontalFlip: 0.5
augmentations_val:

# Federated Learning specifics:
default_clients: 10
partition: balanced # used for synthetic splits. Current options for synthetic split: balanced / unique-class
examples_from_split: validation

# Data-specific implementation constants:
batch_size: 128
caching: False
defaults:
  - db: none # Database Setup # use the cmd-line to activate the LMDB module with data.db=LMDB
